services:
  backend:
    container_name: django-backend
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: ./docker/Dockerfile
    ports:
      - "8000:8000"
    volumes:
    # TODO: dont forget to delete for production, you dont want to mirror ./backend/app:/app:z, this is only for local dev
      - ./backend/app:/app:z  # mirrors the changes made in the app folder to the container an vice versa
      - dev-static-data:/vol/web
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./.envs/.dev/.django
      - ./.envs/.dev/.postgres
    depends_on:
      - db

  db:
    container_name: db-postgres
    restart: unless-stopped
    build:
      context: ./database
      dockerfile: ./docker/Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.dev/.postgres

  frontend:
    container_name: react-frontend
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: ./docker/dev/Dockerfile
    ports:
      - "3000:3000"
    volumes:
    # TODO: dont forget to delete for production, you dont want to mirror ./frontend/app:/app:z, this is only for local dev
    # same for - /app/node_modules/ bc it is only here to bc of the first mount
      - ./frontend/app:/app:z  # mirrors the changes made in the app folder to the container an vice versa
      # ensure that the node_modules directory inside the container retains its contents and is not affected by changes in the host directory.
      # only needed bc we miroring changes above.
      - /app/node_modules/  # Exclude node_modules from the volume mount 
    command: >
      sh -c "npm run dev -- --port 3000"
    depends_on:
      - backend

volumes:
  dev-static-data:
  postgres-data: